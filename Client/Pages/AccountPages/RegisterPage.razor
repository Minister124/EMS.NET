@page "/identity/account/register"
@layout AuthenticationPage

<div class="container">
    <div class="row">
        <div class="col-lg-4"></div>
        <div class="col-lg-5">
            <EditForm Enhance Model="User" OnValidSubmit="HandleSubmit">
                 <DataAnnotationsValidator />
                 <div class="card bg-dark text-white" style="border-radius: 10px; margin-top:10%;">
                     <div class="card-header text-center fs-5 mb-2">Registration Form</div>
                     <div class="container">
                         <div class="row">
                             <div class="col-lg-4 col-md-4 col-sm-4"></div>
                             <div class="col-lg-4 col-md-4 col-sm-4 d-flex justify-content-center">
                                 <img style="border-radius:20px" src="../images/Background/logo.jpg" height="50" width="50" />
                             </div>
                             <div class="col-lg-4 col-md-4 col-sm-4"></div>
                         </div>
                     </div>
                     <div class="card-body">
                         <div class="form-group mt-3">
                             <label class="form-label">FullName</label>
                             <InputText @bind-Value="User.FullName" class="form-control"></InputText>
                         </div>
                         <div class="form-group mt-3">
                             <label class="form-label">Email</label>
                             <InputText @bind-Value="User.Email" class="form-control"></InputText>
                         </div>
                         <div class="form-group mt-3">
                             <label class="form-label">Password</label>
                             <input type="password" @bind="User.Password" class="form-control"></input>
                         </div>
                         <div class="form-group mt-3">
                             <label class="form-label">Confirm Password</label>
                             <input type="password" @bind="User.ConfirmPassword" class="form-control"></input>
                         </div>
                         <div class="form-group mt-3 text-center" style="font-weight:bold; color:white;">
                             @if (showLoadingButton)
                            {
                                <SpinningLoadingButton></SpinningLoadingButton>
                            }
                            else
                            {
                                <button class="btn btn-outline-primary" style="font-weight:bold;" type="submit">Register</button>
                            }
                         </div>
                     </div>
                     <div class="card-footer text-center">
                         <span class="text-center">
                             Already Have an Account?
                             <a class="btn-link" href="identity/account/login" style="color: #007BFF; text-decoration: none; font-weight: bold;">
                                 Login Now
                                 <i class="bi bi-arrow-left-circle">
                                     <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-left-circle" viewBox="0 0 16 16">
                                         <path fill-rule="evenodd" d="M1 8a7 7 0 1 0 14 0A7 7 0 0 0 1 8m15 0A8 8 0 1 1 0 8a8 8 0 0 1 16 0m-4.5-.5a.5.5 0 0 1 0 1H5.707l2.147 2.146a.5.5 0 0 1-.708.708l-3-3a.5.5 0 0 1 0-.708l3-3a.5.5 0 1 1 .708.708L5.707 7.5z" />
                                     </svg>
                                 </i>
                             </a>
                         </span>
                         <ValidationSummary />
                     </div>
                 </div>
             </EditForm>
         </div>
     </div>
 </div>
@code{
    public bool showLoadingButton { get; set; } = false;
    Register User = new();
    async Task HandleSubmit()
    {
        showLoadingButton = true;
        var result = await accountService.CreateAsync(User);
        if (result.Flag)
        {
            User = new();
        }
        else
        {

        }
        showLoadingButton = false;
    }
 }